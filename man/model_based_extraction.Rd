% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_stan_model.R
\name{model_based_extraction}
\alias{model_based_extraction}
\title{model_based_extraction}
\usage{
model_based_extraction(
  weights,
  sd_diff = 0,
  min_diff = 1,
  model_backend = "rstan"
)
}
\arguments{
\item{sd_diff}{is the standard deviation difference threshold for identifying skewness}

\item{min_diff}{is the minimum difference threshold for model comparison.}

\item{weights:}{a vector of weights to be analyzed}

\item{model_backend:}{Specifies the backend used for fitting models (e.g., "rstan")}

\item{normal_model_base}{is the base model for fitting normal distribution}

\item{skewnormal_model_base}{is the base model for fitting skew-normal distribution}

\item{poisson_model_base}{is the base model for fitting Poisson distribution}

\item{poisson_model_label}{is the base model for fitting Poisson distribution}
}
\value{
The output is a data frame with two columns: "weight" and "strong", indicating whether each weight is classified as a strong tie.
}
\description{
This function identifies and classifies strong ties in a network based on weight data.
}
\examples{
devtools::load_all("/Users/chloevillette/Desktop/strongTies")

library(dplyr)
library(brms)
library(rstan)

# Create a data set
simulated.df<-netTS::sim.events.data(50, 100,20)
simulated.data<-simulated.df$beha
simulated.data<-simulated.data[,c(1:2)]

# Isolate a certain individual (#12).
subset.id <- simulated.data \%>\% dplyr::filter (from =="12")

# Create an edgelist
edgelist.id <- netTS::create.an.edgeList(subset.id)

# Run the function 
if(nrow(edgelist.id)>10){
  
  strong.ties <-model_based_extraction(edgelist.id$weight, sd_diff = 0, min_diff=3, model_backend="rstan")
  
}else{
  
  strong.ties <- model_based_extraction(edgelist.id$weight, sd_diff = 0, min_diff=1, model_backend="rstan")
}

# Re-attribute partners to the corresponding weights
edgelist.id <- edgelist.id[order(edgelist.id$weight),] 
strong.ties <-cbind(strong.ties,edgelist.id[,c("from", "to")])
}
